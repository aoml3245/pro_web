services:
  nginx:
    container_name: "nginx"
    build:
      # nginx directory를 root로 사용
      context: ./nginx
      # ./nginx/Dockerfile을 사용해서 build
      dockerfile: Dockerfile
    ports:
      - "20080:80"
    depends_on:
      - quil
      - ysocket
    restart: always
  quil:
    container_name: "quil"
    build:
      # velog directory를 root로 사용
      context: ./quil
      # ./velog/Dockerfile을 사용해서 build
      dockerfile: Dockerfile
    restart: always
  ysocket:
    container_name: "ysocket"
    build:
      # velog directory를 root로 사용
      context: ./ysocket
      # ./velog/Dockerfile을 사용해서 build
      dockerfile: Dockerfile
    depends_on:
      - mongodb
    restart: always
  mongodb:
    container_name: "mongodb"
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    ports:
      - 27017:27017
    volumes:
      - ./data:/data
    environment:
      # - MONGODB_INITDB_ROOT_USERNAME=test
      # - MONGODB_INITDB_ROOT_PASSWORD=test
      - MONGODB_INITDB_DATABASE=proweb
    restart: always
  spellcheck:
    container_name: "spellcheck"
    build:
      context: ./spell_check
      dockerfile: Dockerfile
    restart: always

  web:
    container_name: "web"
    build:
      context: ./web
      dockerfile: Dockerfile
    restart: always
